{"version":3,"sources":["App.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","submitUser","state","user","fetch","then","response","json","data","setState","error","currentPlaylist","playlist","generateUserPlaylist","catch","message","console","log","updateUser","updateSelectedPlaylist","selectedPlaylist","playlistTracks","playlistAudioInfo","generatePlaylistInfo","generatePlaylistAudio","playlistNames","items","forEach","item","push","name","id","list","tracks","track","audio_features","generateVisualizeDataInfo","trackInfo","trackID","trackAudio","filter","audio","access_token","react_default","a","createElement","className","visualization","App_DataDisplay","App_Header","App_IDInput","App_PlaylistOptions","playlistName","updateCurrentPlaylist","Component","Header","IDInput","handleInput","event","target","value","_this2","onChange","type","onClick","PlaylistOptions","_this3","options","map","key","selected","defaultChecked","DataDisplay","header","head","body","artists","album","energy","valence","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.2220c600.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '../src/index.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: \"1233291715\",\n      playlist: null,\n      currentPlaylist: \"\",\n      playlistTracks: null,\n      playlistAudioInfo: null,\n      access_token: \"\",\n      error: \"\"\n    }\n  }\n\n  submitUser = () => {\n    if (this.state.user === \"1233291715\") { // change to 1233291715\n      let url = \"./data/list-playlist.JSON\";\n      fetch(url)\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          this.setState({ user: \"\", data: data, error: \"\", currentPlaylist: \"\", playlist: null });\n          this.generateUserPlaylist();\n\n        })\n        .catch((error) => {\n          this.setState({ error: error.message });\n          console.log(error);\n        });\n    } else {\n      this.setState({ error: \"No user found with that user ID\" });\n    }\n  }\n\n  updateUser = (user) => {\n    this.setState({ user: user });\n  }\n\n  updateSelectedPlaylist = (playlist) => {\n    this.setState({ selectedPlaylist: playlist, playlistTracks: null, playlistAudioInfo: null});\n    if (playlist != \"\") {\n      this.generatePlaylistInfo(playlist);\n      this.generatePlaylistAudio(playlist);\n    }\n  }\n\n  generateUserPlaylist = () => {\n    let playlistNames = [];\n    this.state.data.items.forEach((item) => {\n      playlistNames.push({ name: item.name, id: item.id });\n    });\n    this.setState({ playlist: playlistNames });\n  }\n\n  generatePlaylistInfo = (playlist) => {\n    let url = \"./data/playlist-tracks/\"+ playlist + \".JSON\";\n    fetch(url)\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          console.log (playlist);\n          \n          let list = \"\";\n          data.tracks.items.forEach((track) => {\n            list = list + track.track.id + \",\";\n          })\n          console.log (list);\n\n          this.setState({playlistTracks: data.tracks.items});\n        })\n        .catch((error) => {\n          this.setState({ error: error.message });\n          console.log(error);\n        });\n  }\n\n  generatePlaylistAudio = (playlist) => {\n    let url = \"./data/audio-feature/\"+ playlist + \"-audio-feature.JSON\";\n    fetch(url)\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          this.setState({playlistAudioInfo: data.audio_features});\n        })\n        .catch((error) => {\n          this.setState({ error: error.message });\n          console.log(error);\n        });\n  }\n\n  generateVisualizeDataInfo = () => {\n    let trackInfo = [];\n    this.state.playlistTracks.forEach((track) => {\n      let trackID = track.track.id;\n      let trackAudio = this.state.playlistAudioInfo.filter((item) => {\n        return (trackID == item.id);\n      });\n      trackInfo.push({track: track.track, audio: trackAudio[0]});\n    });\n    return trackInfo;\n  }\n\n  render() {\n    let error = this.state.error;\n    if (error != \"\") {\n      error = <p className=\"alert alert-danger mt-2\">{error}</p>\n    }\n\n    let visualization = null;\n    if (this.state.playlistAudioInfo != null && this.state.playlistTracks != null) {\n      visualization = <DataDisplay data={this.generateVisualizeDataInfo()} />;\n    }\n\n    return (\n      <div className=\"container\">\n        <Header />\n        <main>\n\n          <section>\n            {/* Input User ID */}\n            <IDInput user={this.state.user} updateUser={this.updateUser} submitUser={this.submitUser} />\n\n            {/* Error Occurrence */}\n            {error}\n\n            {/* Generating Playlist based on user ID */}\n            <PlaylistOptions\n              playlistName={this.state.playlist}\n              selectedPlaylist={this.state.currentPlaylist}\n              updateCurrentPlaylist={this.updateSelectedPlaylist} />\n          </section>\n\n          <section>\n            {visualization}\n          </section>\n\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\nclass Header extends Component {\n\n  render() {\n    return (\n      <div className=\"jumbotron\">\n        <h1>POSSIBLE Spotify Application</h1>\n        <p className=\"sub-heading\">\n          Please start by inserting a user id (try: 1233291715) below: \n        </p>\n      </div>\n    );\n  }\n\n}\n\nclass IDInput extends Component {\n\n  handleInput = (event) => {\n    console.log(event.target.value);\n    this.props.updateUser(event.target.value);\n  }\n\n  render() {\n\n    return (\n      <div className=\"input-group\">\n        <div className=\"input-group-prepend\">\n          <label className=\"input-group-text\">User ID</label>\n        </div>\n        <input className=\"form-control\"\n          value={this.props.user}\n          onChange={this.handleInput}\n          type=\"text\" />\n        <div className=\"input-group-append\">\n          <button className=\"btn\" onClick={this.props.submitUser} >Find Playlists</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass PlaylistOptions extends Component {\n\n  updateCurrentPlaylist = (event) => {\n    this.props.updateCurrentPlaylist(event.target.value);\n  }\n\n  render() {\n\n    if (this.props.playlistName != null) {\n      let options = this.props.playlistName.map((playlist) => {\n        return (<option key={playlist.id} value={playlist.id}>{playlist.name}</option>);\n      });\n      return (\n        <div className=\"input-group mt-3\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\">Select a playlist</span>\n          </div>\n\n          <select className=\"custom-select\" selected={this.props.selectedPlaylist} onChange={this.updateCurrentPlaylist} >\n            <option defaultChecked value=\"\">Click Me</option>\n            {options}\n          </select>\n        </div>\n      );\n    } else {\n      return (null);\n    }\n  }\n}\n\nclass DataDisplay extends Component {\n\n  render () {\n\n    let header = [\"Track Name\", \"Artist\", \"Album\", \"Energy\", \"Valence\"];\n    header = header.map ((head) => {\n      return <th key={head}>{head}</th>;\n    })\n\n    console.log (this.props.data);\n\n    let body = this.props.data.map((track) => {\n      return (\n        <tr key={track.audio.id}>\n          <td>{track.track.name}</td>\n          <td>{track.track.artists[0].name}</td>\n          <td>{track.track.album.name}</td>\n          <td>{track.audio.energy}</td>\n          <td>{track.audio.valence}</td>\n        </tr>\n      );\n    });\n\n    return (\n      <table className=\"table mt-5 text-white\">\n        <thead className=\"header\">\n          <tr>\n            {header}\n          </tr>\n        </thead>\n        <tbody>\n          {body}\n        </tbody>\n      </table>\n    );\n  }\n\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}